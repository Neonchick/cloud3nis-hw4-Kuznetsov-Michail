{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(loadNotesSaga),\n    _marked2 = _regeneratorRuntime.mark(createNoteSaga),\n    _marked3 = _regeneratorRuntime.mark(editNoteSaga),\n    _marked4 = _regeneratorRuntime.mark(deleteNoteSaga),\n    _marked5 = _regeneratorRuntime.mark(notesSaga);\n\nimport { takeEvery, put, call } from 'redux-saga/effects';\nimport * as api from \"../../lib/api-client\";\nimport { createNoteFailure, editNoteFailure, deleteNoteFailure, loadNotesFailure, ladNotesSuccess, types as t } from \"./actions\";\n\nfunction loadNotesSaga() {\n  var res, notes;\n  return _regeneratorRuntime.wrap(function loadNotesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return api.getNotes();\n\n        case 3:\n          res = _context.sent;\n          notes = res.data;\n          _context.next = 7;\n          return put(loadNotesSuccess(notes));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(loadNotesFailure(_context.t0.toString()));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction createNoteSaga(action) {\n  return _regeneratorRuntime.wrap(function createNoteSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          console.log('saga cerate');\n          console.log(action);\n          _context2.next = 5;\n          return api.createNote(action.note);\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put(createNoteFailure(_context2.t0.toString()));\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction editNoteSaga(action) {\n  return _regeneratorRuntime.wrap(function editNoteSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log('saga edit');\n          console.log(action);\n          _context3.next = 5;\n          return api.createNote(action.note);\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put(editNoteFailure(_context3.t0.toString()));\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction deleteNoteSaga(action) {\n  return _regeneratorRuntime.wrap(function deleteNoteSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          console.log('saga delete');\n          console.log(action);\n          _context4.next = 5;\n          return api.createNote(action.note);\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put(deleteNoteFailure(_context4.t0.toString()));\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n}\n\nfunction notesSaga() {\n  return _regeneratorRuntime.wrap(function notesSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeEvery(t.LOAD_NOTES_REQUEST, loadNotesSaga);\n\n        case 2:\n          _context5.next = 4;\n          return takeEvery(t.CREATE_NOTE, createNoteSaga);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexport default notesSaga;","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/modules/notes/sagas.js"],"names":["loadNotesSaga","createNoteSaga","editNoteSaga","deleteNoteSaga","notesSaga","takeEvery","put","call","api","createNoteFailure","editNoteFailure","deleteNoteFailure","loadNotesFailure","ladNotesSuccess","types","t","getNotes","res","notes","data","loadNotesSuccess","toString","action","console","log","createNote","note","LOAD_NOTES_REQUEST","CREATE_NOTE"],"mappings":";;uCAWUA,a;wCAWAC,c;wCAUAC,Y;wCAUAC,c;wCAUAC,S;;AApDV,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAO,KAAKC,GAAZ;AACA,SACIC,iBADJ,EAEIC,eAFJ,EAGIC,iBAHJ,EAIIC,gBAJJ,EAKIC,eALJ,EAMIC,KAAK,IAAIC,CANb;;AASA,SAAUf,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoB,iBAAMQ,GAAG,CAACQ,QAAJ,EAAN;;AAFpB;AAEcC,UAAAA,GAFd;AAGcC,UAAAA,KAHd,GAGsBD,GAAG,CAACE,IAH1B;AAAA;AAKQ,iBAAMb,GAAG,CAACc,gBAAgB,CAACF,KAAD,CAAjB,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOQ,iBAAMZ,GAAG,CAACM,gBAAgB,CAAC,YAAMS,QAAN,EAAD,CAAjB,CAAT;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUpB,cAAV,CAAyBqB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAIQ,iBAAMd,GAAG,CAACiB,UAAJ,CAAeH,MAAM,CAACI,IAAtB,CAAN;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMpB,GAAG,CAACG,iBAAiB,CAAC,aAAMY,QAAN,EAAD,CAAlB,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUnB,YAAV,CAAuBoB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAIQ,iBAAMd,GAAG,CAACiB,UAAJ,CAAeH,MAAM,CAACI,IAAtB,CAAN;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMpB,GAAG,CAACI,eAAe,CAAC,aAAMW,QAAN,EAAD,CAAhB,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUlB,cAAV,CAAyBmB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAIQ,iBAAMd,GAAG,CAACiB,UAAJ,CAAeH,MAAM,CAACI,IAAtB,CAAN;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMpB,GAAG,CAACK,iBAAiB,CAAC,aAAMU,QAAN,EAAD,CAAlB,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUjB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMC,SAAS,CAACU,CAAC,CAACY,kBAAH,EAAuB3B,aAAvB,CAAf;;AADJ;AAAA;AAEI,iBAAMK,SAAS,CAACU,CAAC,CAACa,WAAH,EAAgB3B,cAAhB,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeG,SAAf","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport * as api from '../../lib/api-client';\r\nimport {\r\n    createNoteFailure,\r\n    editNoteFailure, \r\n    deleteNoteFailure, \r\n    loadNotesFailure, \r\n    ladNotesSuccess, \r\n    types as t\r\n} from './actions';\r\n\r\nfunction* loadNotesSaga() {\r\n    try {\r\n        const res = yield api.getNotes();\r\n        const notes = res.data;\r\n\r\n        yield put(loadNotesSuccess(notes));\r\n    } catch (error) {\r\n        yield put(loadNotesFailure(error.toString()));\r\n    }\r\n}\r\n\r\nfunction* createNoteSaga(action) {\r\n    try {\r\n        console.log('saga cerate')\r\n        console.log(action)\r\n        yield api.createNote(action.note);\r\n    } catch (error) {\r\n        yield put(createNoteFailure(error.toString()));\r\n    }\r\n}\r\n\r\nfunction* editNoteSaga(action) {\r\n    try {\r\n        console.log('saga edit')\r\n        console.log(action)\r\n        yield api.createNote(action.note);\r\n    } catch (error) {\r\n        yield put(editNoteFailure(error.toString()));\r\n    }\r\n}\r\n\r\nfunction* deleteNoteSaga(action) {\r\n    try {\r\n        console.log('saga delete')\r\n        console.log(action)\r\n        yield api.createNote(action.note);\r\n    } catch (error) {\r\n        yield put(deleteNoteFailure(error.toString()));\r\n    }\r\n}\r\n\r\nfunction* notesSaga() {\r\n    yield takeEvery(t.LOAD_NOTES_REQUEST, loadNotesSaga);\r\n    yield takeEvery(t.CREATE_NOTE, createNoteSaga);\r\n}\r\n\r\nexport default notesSaga;"]},"metadata":{},"sourceType":"module"}