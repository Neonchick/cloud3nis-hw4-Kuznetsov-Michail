{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\source\\\\HSE\\\\cloud3nis-hw3-Kuznetsov-Michail\\\\notes\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Notes from \"./src/screens/Notes\";\nimport EditNote from \"./src/screens/EditNote\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var Stack = createNativeStackNavigator();\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: '#121212'\n          },\n          headerTintColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\",\n        component: Notes,\n        options: t,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n        component: EditNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n        component: EditNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/source/HSE/cloud3nis-hw3-Kuznetsov-Michail/notes/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","Notes","EditNote","App","Stack","headerStyle","backgroundColor","headerTintColor","t","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;;IAEqBC,G;;;;;;;;;;;;;WAEjB,kBAAS;AACL,UAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;AAEA,aACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,SAAP;AACI,QAAA,aAAa,EAAE;AACXK,UAAAA,WAAW,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR,WADF;AAIXC,UAAAA,eAAe,EAAE;AAJN,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,qEAAnB;AAAkC,QAAA,SAAS,EAAEN,KAA7C;AAAoD,QAAA,OAAO,EAAEO,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,uFAAnB;AAAqC,QAAA,SAAS,EAAEN,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,2HAAnB;AAA2C,QAAA,SAAS,EAAEA,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ,CADJ;AAeH;;;;EApB4BJ,KAAK,CAACW,S;;SAAlBN,G","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Notes from './src/screens/Notes';\nimport EditNote from './src/screens/EditNote';\n\nexport default class App extends React.Component {\n\n    render() {\n        const Stack = createNativeStackNavigator();\n\n        return (\n            <NavigationContainer>\n                <Stack.Navigator\n                    screenOptions={{\n                        headerStyle: {\n                            backgroundColor: '#121212',\n                        },\n                        headerTintColor :'white',\n                    }}>\n                    <Stack.Screen name=\"Список задач\" component={Notes} options={t}/>\n                    <Stack.Screen name=\"Создание задачи\" component={EditNote} />\n                    <Stack.Screen name=\"Редактирование задачи\" component={EditNote} />\n                </Stack.Navigator>\n            </NavigationContainer>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}