{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\source\\\\HSE\\\\Cross-PlatformApps\\\\cloud3nis-hw4-Kuznetsov-Michail\\\\notes\\\\src\\\\screens\\\\Notes.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NoteView from \"../components/NoteView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { selectNotes, selectIsLoaded } from \"../modules/notes/selectors\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from '@react-navigation/native';\nimport { loadNotes } from \"../modules/notes/actions\";\n\nvar Notes = function (_React$Component) {\n  _inherits(Notes, _React$Component);\n\n  var _super = _createSuper(Notes);\n\n  function Notes(props) {\n    var _this;\n\n    _classCallCheck(this, Notes);\n\n    _this = _super.call(this, props);\n    _this.emptyNote = {\n      id: null,\n      name: '',\n      description: '',\n      image: null\n    };\n\n    if (!_this.props.isLoaded) {\n      _this.props.loadNotes();\n    }\n\n    _this.props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            _this.props.navigation.navigate('CreateNote', {\n              note: _this.emptyNote\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.addText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Notes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notes = this.props.notes.notes;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, notes.size !== 0 ? React.createElement(FlatList, {\n        data: Array.from(notes.values()),\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(NoteView, {\n            note: item,\n            navigation: _this2.props.navigation,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 59\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }\n      }) : React.createElement(Text, {\n        style: styles.noNotesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, \"Записей нет\"));\n    }\n  }]);\n\n  return Notes;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: selectNotes(state),\n    isLoaded: selectIsLoaded(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadNotes: loadNotes\n})(Notes);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: 'rgba(0, 0, 0, 0.9)',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  },\n  noNotesText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  addButton: {\n    backgroundColor: '#8A2BE2',\n    borderRadius: 20,\n    marginVertical: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  addText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/screens/Notes.jsx"],"names":["React","NoteView","selectNotes","selectIsLoaded","connect","ThemeProvider","loadNotes","Notes","props","emptyNote","id","name","description","image","isLoaded","navigation","setOptions","headerRight","styles","addButton","navigate","note","addText","notes","container","size","Array","from","values","item","toString","noNotesText","Component","mapStateToProps","state","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","paddingVertical","color","fontSize","textAlign","borderRadius","marginVertical","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP;;;;;;AAEA,SAASC,WAAT,EAAsBC,cAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT;;IAEMC,K;;;;;AASF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UAPnBC,SAOmB,GAPP;AACRC,MAAAA,EAAE,EAAE,IADI;AAERC,MAAAA,IAAI,EAAE,EAFE;AAGRC,MAAAA,WAAW,EAAE,EAHL;AAIRC,MAAAA,KAAK,EAAE;AAJC,KAOO;;AAGf,QAAI,CAAC,MAAKL,KAAL,CAAWM,QAAhB,EAA0B;AACtB,YAAKN,KAAL,CAAWF,SAAX;AACH;;AAED,UAAKE,KAAL,CAAWO,UAAX,CAAsBC,UAAtB,CAAiC;AAC7BC,MAAAA,WAAW,EAAE;AAAA,eACT,oBAAC,gBAAD;AACI,UAAA,KAAK,EAAEC,MAAM,CAACC,SADlB;AAEI,UAAA,OAAO,EAAE,mBAAM;AACX,kBAAKX,KAAL,CAAWO,UAAX,CAAsBK,QAAtB,CAA+B,YAA/B,EAA6C;AAAEC,cAAAA,IAAI,EAAE,MAAKZ;AAAb,aAA7C;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAES,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDALJ,CADS;AAAA;AADgB,KAAjC;;AAPe;AAkBlB;;;;WAED,kBAAS;AAAA;;AACL,UAAIC,KAAK,GAAG,KAAKf,KAAL,CAAWe,KAAX,CAAiBA,KAA7B;AACA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQD,KAAK,CAACE,IAAN,KAAe,CAAf,GAGQ,oBAAC,QAAD;AACI,QAAA,IAAI,EAAEC,KAAK,CAACC,IAAN,CAAWJ,KAAK,CAACK,MAAN,EAAX,CADV;AAEI,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,iBAAc,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEA,IAAhB;AAAsB,YAAA,UAAU,EAAE,MAAI,CAACrB,KAAL,CAAWO,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AAAA,SAFhB;AAGI,QAAA,YAAY,EAAG,sBAACc,IAAD;AAAA,iBAAUA,IAAI,CAACC,QAAL,EAAV;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,GAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,aAAlC,CAZZ,CADJ;AAiBH;;;;EAhDe/B,KAAK,CAACgC,S;;AAoD1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BX,IAAAA,KAAK,EAAErB,WAAW,CAACgC,KAAD,CADY;AAE9BpB,IAAAA,QAAQ,EAAEX,cAAc,CAAC+B,KAAD;AAFM,GAAL;AAAA,CAA7B;;AAKA,eAAe9B,OAAO,CAAC6B,eAAD,EAAkB;AAAE3B,EAAAA,SAAS,EAATA;AAAF,CAAlB,CAAP,CAAwCC,KAAxC,CAAf;AAEA,IAAMW,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAE7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,SAHL;AAIPC,IAAAA,eAAe,EAAE,oBAJV;AAKPC,IAAAA,iBAAiB,EAAE,EALZ;AAMPC,IAAAA,eAAe,EAAE;AANV,GAFkB;AAW7BX,EAAAA,WAAW,EAAE;AACTY,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,SAAS,EAAE;AAHF,GAXgB;AAiB7B1B,EAAAA,SAAS,EAAE;AACPqB,IAAAA,eAAe,EAAE,SADV;AAEPM,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,cAAc,EAAE,EAHT;AAIPL,IAAAA,eAAe,EAAE,EAJV;AAKPD,IAAAA,iBAAiB,EAAE;AALZ,GAjBkB;AAyB7BnB,EAAAA,OAAO,EAAE;AACLqB,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLI,IAAAA,UAAU,EAAE;AAHP;AAzBoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport NoteView from '../components/NoteView';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport { selectNotes, selectIsLoaded } from \"../modules/notes/selectors\";\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider } from '@react-navigation/native';\r\nimport { loadNotes } from \"../modules/notes/actions\";\r\n\r\nclass Notes extends React.Component {\r\n\r\n    emptyNote = {\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        image: null,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if (!this.props.isLoaded) {\r\n            this.props.loadNotes();\r\n        }\r\n\r\n        this.props.navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity\r\n                    style={styles.addButton}\r\n                    onPress={() => {\r\n                        this.props.navigation.navigate('CreateNote', { note: this.emptyNote })\r\n                    }}>\r\n                    <Text style={styles.addText}>Создать</Text>\r\n                </TouchableOpacity>\r\n            ),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let notes = this.props.notes.notes;\r\n        return (\r\n            <View style={styles.container}>\r\n                {\r\n                    notes.size !== 0\r\n                        ?\r\n                        (\r\n                            <FlatList\r\n                                data={Array.from(notes.values())}\r\n                                renderItem={({ item }) => <NoteView note={item} navigation={this.props.navigation} />}\r\n                                keyExtractor={ (item) => item.toString() }\r\n                            />\r\n                        )\r\n                        :\r\n                        <Text style={styles.noNotesText}>{\"Записей нет\"}</Text>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    notes: selectNotes(state),\r\n    isLoaded: selectIsLoaded(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadNotes })(Notes)\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'stretch',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    },\r\n\r\n    noNotesText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    addButton: {\r\n        backgroundColor: '#8A2BE2',\r\n        borderRadius: 20,\r\n        marginVertical: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n\r\n    addText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}