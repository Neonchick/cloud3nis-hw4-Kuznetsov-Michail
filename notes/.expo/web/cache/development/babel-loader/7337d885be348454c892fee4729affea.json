{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\source\\\\HSE\\\\cloud3nis-hw3-Kuznetsov-Michail\\\\notes\\\\src\\\\screens\\\\EditNote.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from 'expo-image-picker';\n\nvar EditNote = function (_React$Component) {\n  _inherits(EditNote, _React$Component);\n\n  var _super = _createSuper(EditNote);\n\n  function EditNote(props) {\n    var _this;\n\n    _classCallCheck(this, EditNote);\n\n    _this = _super.call(this, props);\n\n    _this.pickImage = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.state.hasMediaLibraryPermissions) {\n                _context.next = 8;\n                break;\n              }\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 4:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri,\n                  loading: false\n                });\n              }\n\n              _context.next = 9;\n              break;\n\n            case 8:\n              alert('Sorry, we need camera roll permissions to make this work! Change setings.');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onSave = function () {\n      var id;\n\n      if (_this.props.route.params.note.id !== null) {\n        id = _this.props.route.params.note.id;\n      } else {\n        id = Date.now();\n      }\n\n      console.log(id);\n\n      _this.props.route.params.handleSaveNode({\n        id: id,\n        name: _this.state.name,\n        description: _this.state.description,\n        image: _this.state.image\n      });\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      name: _this.props.route.params.note.name,\n      description: _this.props.route.params.note.description,\n      image: _this.props.route.params.note.image,\n      loading: false,\n      hasMediaLibraryPermissions: false\n    };\n\n    _this.props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: _this.onSave,\n          title: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n          underlayColor: \"#fff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.addText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n      }\n    });\n\n    (function _callee2() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 2:\n              _await$ImagePicker$re = _context2.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              } else {\n                _this.setState({\n                  hasMediaLibraryPermissions: true\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    _this.pickImage = _this.pickImage.bind(_assertThisInitialized(_this));\n    _this.onSave = _this.onSave.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Name\",\n        value: this.state.name,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            name: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Discription\",\n        value: this.state.description,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            description: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }), this.state.image && React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: this.state.image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }), this.state.loading && React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 44\n        }\n      }), React.createElement(Button, {\n        title: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\",\n        onPress: this.pickImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return EditNote;\n}(React.Component);\n\nexport { EditNote as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.9)'\n  },\n  image: {\n    width: 400,\n    height: 300\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/cloud3nis-hw3-Kuznetsov-Michail/notes/src/screens/EditNote.jsx"],"names":["React","useState","useEffect","ImagePicker","EditNote","props","pickImage","state","hasMediaLibraryPermissions","setState","loading","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","image","uri","alert","onSave","id","route","params","note","Date","now","console","log","handleSaveNode","name","description","navigation","goBack","setOptions","headerRight","styles","addButton","addText","requestMediaLibraryPermissionsAsync","status","bind","container","text","Component","StyleSheet","create","flex","padding","backgroundColor","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, TextInput, Button, Image, ActivityIndicator, Platform } from \"react-native\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default class EditNote extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.route.params.note.name,\r\n            description: this.props.route.params.note.description,\r\n            image: this.props.route.params.note.image,\r\n            loading: false,\r\n            hasMediaLibraryPermissions: false,\r\n        }\r\n\r\n        this.props.navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity\r\n                    style={styles.addButton}\r\n                    onPress={this.onSave} title=\"Сохранить\"\r\n                    underlayColor='#fff'>\r\n                    <Text style={styles.addText}>Создать</Text>\r\n                </TouchableOpacity>\r\n            ),\r\n        });\r\n\r\n        (async () => {\r\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                alert('Sorry, we need camera roll permissions to make this work!');\r\n            } else {\r\n                this.setState({ hasMediaLibraryPermissions: true });\r\n            }\r\n        })();\r\n\r\n        this.pickImage = this.pickImage.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    pickImage = async () => {\r\n        if (this.state.hasMediaLibraryPermissions) {\r\n            this.setState({ loading: true });\r\n            let result = await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n                allowsEditing: true,\r\n                aspect: [4, 3],\r\n                quality: 1,\r\n            });\r\n\r\n            if (!result.cancelled) {\r\n                this.setState({ image: result.uri, loading: false });\r\n            }\r\n        } else {\r\n            alert('Sorry, we need camera roll permissions to make this work! Change setings.');\r\n        }\r\n    };\r\n\r\n    onSave = () => {\r\n\r\n        var id;\r\n        if (this.props.route.params.note.id !== null) {\r\n            id = this.props.route.params.note.id\r\n        } else {\r\n            id = Date.now()\r\n        }\r\n\r\n        console.log(id);\r\n\r\n        this.props.route.params.handleSaveNode({\r\n            id: id,\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            image: this.state.image,\r\n        })\r\n\r\n        this.props.navigation.goBack();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput placeholder='Name' value={this.state.name} onChangeText={text => { this.setState({ name: text }) }} />\r\n                <TextInput placeholder='Discription' value={this.state.description} onChangeText={text => { this.setState({ description: text }) }} />\r\n                {this.state.image && (\r\n                    <Image style={styles.image} source={{ uri: this.state.image }} />\r\n                )}\r\n                {\r\n                    this.state.loading && (<ActivityIndicator size=\"large\" />)\r\n                }\r\n                <Button title=\"Изменить изображение\" onPress={this.pickImage} />\r\n            </View>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 10,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.9)'\r\n    },\r\n    image: {\r\n        width: 400,\r\n        height: 300,\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}