{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\source\\\\HSE\\\\Cross-PlatformApps\\\\cloud3nis-hw4-Kuznetsov-Michail\\\\notes\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Notes from \"./src/screens/Notes\";\nimport EditNote from \"./src/screens/EditNote\";\nimport rootReducer from \"./src/modules/reducer\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from 'redux-saga';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var store = createStore(rootReducer);\n      var Stack = createNativeStackNavigator();\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: '#121212'\n          },\n          headerTintColor: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Notes\",\n        component: Notes,\n        options: {\n          title: \"Список задач\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"CreateNote\",\n        component: EditNote,\n        options: {\n          title: \"Создание задачи\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"EditNote\",\n        component: EditNote,\n        options: {\n          title: \"Редактирование\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","Notes","EditNote","rootReducer","Provider","createStore","applyMiddleware","createSagaMiddleware","App","store","Stack","headerStyle","backgroundColor","headerTintColor","title","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;IAEqBC,G;;;;;;;;;;;;;WAEjB,kBAAS;AAEL,UAAMC,KAAK,GAAGJ,WAAW,CACrBF,WADqB,CAAzB;AAIA,UAAMO,KAAK,GAAGV,0BAA0B,EAAxC;AAEA,aACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAES,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,SAAP;AACI,QAAA,aAAa,EAAE;AACXE,UAAAA,WAAW,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR,WADF;AAIXC,UAAAA,eAAe,EAAE;AAJN,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEZ,KAAtC;AAA6C,QAAA,OAAO,EAAE;AAAEa,UAAAA,KAAK,EAAE;AAAT,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAgC,QAAA,SAAS,EAAEZ,QAA3C;AAAqD,QAAA,OAAO,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,SAAS,EAAEZ,QAAzC;AAAmD,QAAA,OAAO,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ,CADJ,CADJ;AAiBH;;;;EA3B4BhB,KAAK,CAACiB,S;;SAAlBP,G","sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Notes from './src/screens/Notes';\r\nimport EditNote from './src/screens/EditNote';\r\nimport rootReducer from './src/modules/reducer';\r\nimport { Provider } from 'react-redux';\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    render() {\r\n\r\n        const store = createStore(\r\n            rootReducer\r\n        )\r\n\r\n        const Stack = createNativeStackNavigator();\r\n\r\n        return (\r\n            <Provider store={store}>\r\n                <NavigationContainer>\r\n                    <Stack.Navigator\r\n                        screenOptions={{\r\n                            headerStyle: {\r\n                                backgroundColor: '#121212',\r\n                            },\r\n                            headerTintColor: 'white',\r\n                        }}>\r\n                        <Stack.Screen name=\"Notes\" component={Notes} options={{ title: \"Список задач\" }} />\r\n                        <Stack.Screen name=\"CreateNote\" component={EditNote} options={{ title: \"Создание задачи\" }} />\r\n                        <Stack.Screen name=\"EditNote\" component={EditNote} options={{ title: \"Редактирование\" }} />\r\n                    </Stack.Navigator>\r\n                </NavigationContainer>\r\n            </Provider>\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}