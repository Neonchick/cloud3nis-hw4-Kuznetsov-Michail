{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { types as t } from \"./actions\";\nvar initialState = {\n  notes: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.CREATE_NOTE:\n      {\n        var note = action.note;\n\n        var notes = _objectSpread({}, state.notes);\n\n        notes[note.id] = note;\n        console.log(notes);\n        return {\n          songs: [action.payload].concat(_toConsumableArray(state.songs))\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/modules/notes/reducer.js"],"names":["types","t","initialState","notes","state","action","type","CREATE_NOTE","note","id","console","log","songs","payload"],"mappings":";;;;;;;AAAA,SAAQA,KAAK,IAAIC,CAAjB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,CAAC,CAACM,WAAP;AAAoB;AAChB,YAAQC,IAAR,GAAiBH,MAAjB,CAAQG,IAAR;;AACA,YAAML,KAAK,qBAAOC,KAAK,CAACD,KAAb,CAAX;;AACAA,QAAAA,KAAK,CAACK,IAAI,CAACC,EAAN,CAAL,GAAiBD,IAAjB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,eAAO;AAAES,UAAAA,KAAK,GAAGP,MAAM,CAACQ,OAAV,4BAAsBT,KAAK,CAACQ,KAA5B;AAAP,SAAP;AACH;;AACD;AACI,aAAOR,KAAP;AATR;AAWH,CAZD","sourcesContent":["import {types as t} from \"./actions\";\r\n\r\nconst initialState = {\r\n    notes: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case t.CREATE_NOTE: {\r\n            const { note } = action;\r\n            const notes = {...state.notes};\r\n            notes[note.id] = note;\r\n            console.log(notes)\r\n            return { songs: [action.payload, ...state.songs]};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}