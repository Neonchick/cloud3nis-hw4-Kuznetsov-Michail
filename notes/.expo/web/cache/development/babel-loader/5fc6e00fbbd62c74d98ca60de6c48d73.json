{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\source\\\\HSE\\\\Cross-PlatformApps\\\\cloud3nis-hw4-Kuznetsov-Michail\\\\notes\\\\src\\\\screens\\\\EditNote.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { createNote, editNote, updateNotes } from \"../modules/notes/actions\";\nimport { connect } from 'react-redux';\nimport { selectNotes } from \"../modules/notes/selectors\";\n\nvar EditNote = function (_React$Component) {\n  _inherits(EditNote, _React$Component);\n\n  var _super = _createSuper(EditNote);\n\n  function EditNote(props) {\n    var _this;\n\n    _classCallCheck(this, EditNote);\n\n    _this = _super.call(this, props);\n\n    _this.pickImage = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.state.hasMediaLibraryPermissions) {\n                _context.next = 8;\n                break;\n              }\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 4:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri,\n                  loading: false\n                });\n              }\n\n              _context.next = 9;\n              break;\n\n            case 8:\n              alert('Извините, приложению нужно разрешение на доступ к камере, чтобы загрузить изображение! Добавте разрешение приложению в настройках.');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onSave = function () {\n      var id;\n      var isEdit = _this.props.route.params.note.id !== null;\n\n      if (isEdit) {\n        id = _this.props.route.params.note.id;\n      } else {\n        id = Date.now();\n      }\n\n      var node = {\n        id: id,\n        name: _this.state.name,\n        description: _this.state.description,\n        image: _this.state.image\n      };\n\n      if (isEdit) {\n        _this.props.editNote(node);\n\n        var notes = _this.props.notes;\n\n        _this.props.updateNotes(Array.from(notes.values()));\n      } else {\n        _this.props.createNote(node);\n\n        console.log(\"update\");\n        console.log(_this.props.notes);\n        var _notes = _this.props.notes;\n\n        _this.props.updateNotes(Array.from(_notes.values()));\n      }\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      name: _this.props.route.params.note.name,\n      description: _this.props.route.params.note.description,\n      image: _this.props.route.params.note.image,\n      loading: false,\n      hasMediaLibraryPermissions: false\n    };\n\n    _this.props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: _this.onSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n      }\n    });\n\n    (function _callee2() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 2:\n              _await$ImagePicker$re = _context2.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Извините, приложению нужно разрешение на доступ к камере, чтобы загрузить изображение! Добавте разрешение приложению в настройках.');\n              } else {\n                _this.setState({\n                  hasMediaLibraryPermissions: true\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    _this.pickImage = _this.pickImage.bind(_assertThisInitialized(_this));\n    _this.onSave = _this.onSave.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.nameText,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.5)\",\n        value: this.state.name,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            name: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.descriptionText,\n        placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.5)\",\n        value: this.state.description,\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            description: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }), this.state.image && React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: this.state.image\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }), this.state.loading && React.createElement(ActivityIndicator, {\n        style: styles.activityIndicator,\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 44\n        }\n      }), React.createElement(View, {\n        style: styles.buttonСontainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.pickImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"))));\n    }\n  }]);\n\n  return EditNote;\n}(React.Component);\n\nexport default connect(selectNotes, {\n  createNote: createNote,\n  editNote: editNote,\n  updateNotes: updateNotes\n})(EditNote);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.9)'\n  },\n  buttonСontainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  image: {\n    height: 300,\n    borderRadius: 20,\n    marginTop: 10,\n    marginBottom: 5\n  },\n  button: {\n    backgroundColor: '#8A2BE2',\n    borderRadius: 20,\n    marginVertical: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  nameText: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginBottom: 15,\n    borderRadius: 20,\n    backgroundColor: '#121212',\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginBottom: 5,\n    borderRadius: 20,\n    backgroundColor: '#121212',\n    color: 'white',\n    fontSize: 16,\n    minHeight: 200,\n    textAlignVertical: 'top'\n  },\n  activityIndicator: {\n    marginTop: 10,\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/screens/EditNote.jsx"],"names":["React","ImagePicker","createNote","editNote","updateNotes","connect","selectNotes","EditNote","props","pickImage","state","hasMediaLibraryPermissions","setState","loading","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","image","uri","alert","onSave","id","isEdit","route","params","note","Date","now","node","name","description","notes","Array","from","values","console","log","navigation","goBack","setOptions","headerRight","styles","button","buttonText","requestMediaLibraryPermissionsAsync","status","bind","container","nameText","text","descriptionText","activityIndicator","buttonСontainer","Component","StyleSheet","create","flex","padding","backgroundColor","alignItems","height","borderRadius","marginTop","marginBottom","marginVertical","paddingVertical","paddingHorizontal","color","fontSize","fontWeight","minHeight","textAlignVertical"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, TextInput, Button, Image, ActivityIndicator, TouchableOpacity, Text } from \"react-native\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { createNote, editNote, updateNotes } from \"../modules/notes/actions\";\r\nimport { connect } from 'react-redux';\r\nimport { selectNotes } from \"../modules/notes/selectors\";\r\n\r\nclass EditNote extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.route.params.note.name,\r\n            description: this.props.route.params.note.description,\r\n            image: this.props.route.params.note.image,\r\n            loading: false,\r\n            hasMediaLibraryPermissions: false,\r\n        }\r\n\r\n        this.props.navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={this.onSave}>\r\n                    <Text style={styles.buttonText}>Сохранить</Text>\r\n                </TouchableOpacity>\r\n            ),\r\n        });\r\n\r\n        (async () => {\r\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                alert('Извините, приложению нужно разрешение на доступ к камере, чтобы загрузить изображение! Добавте разрешение приложению в настройках.');\r\n            } else {\r\n                this.setState({ hasMediaLibraryPermissions: true });\r\n            }\r\n        })();\r\n\r\n        this.pickImage = this.pickImage.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    pickImage = async () => {\r\n        if (this.state.hasMediaLibraryPermissions) {\r\n            this.setState({ loading: true });\r\n            let result = await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n                allowsEditing: true,\r\n                aspect: [4, 3],\r\n                quality: 1,\r\n            });\r\n\r\n            if (!result.cancelled) {\r\n                this.setState({ image: result.uri, loading: false });\r\n            }\r\n        } else {\r\n            alert('Извините, приложению нужно разрешение на доступ к камере, чтобы загрузить изображение! Добавте разрешение приложению в настройках.');\r\n        }\r\n    };\r\n\r\n    onSave = () => {\r\n\r\n        var id;\r\n        let isEdit = this.props.route.params.note.id !== null\r\n        if (isEdit) {\r\n            id = this.props.route.params.note.id\r\n        } else {\r\n            id = Date.now()\r\n        }\r\n\r\n        let node = {\r\n            id: id,\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            image: this.state.image,\r\n        }\r\n\r\n        if (isEdit) {\r\n            this.props.editNote(node);\r\n            let notes = this.props.notes;\r\n            this.props.updateNotes(Array.from(notes.values()))\r\n        } else {\r\n            this.props.createNote(node);\r\n            console.log(\"update\")\r\n            console.log(this.props.notes);\r\n            let notes = this.props.notes;\r\n            this.props.updateNotes(Array.from(notes.values()))\r\n        }\r\n\r\n        this.props.navigation.goBack();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.nameText}\r\n                    placeholder='Название'\r\n                    placeholderTextColor='rgba(255, 255, 255, 0.5)'\r\n                    value={this.state.name}\r\n                    onChangeText={text => { this.setState({ name: text }) }}\r\n                />\r\n                <TextInput\r\n                    style={styles.descriptionText}\r\n                    placeholder='Описание'\r\n                    placeholderTextColor='rgba(255, 255, 255, 0.5)'\r\n                    value={this.state.description}\r\n                    multiline={true}\r\n                    onChangeText={text => { this.setState({ description: text }) }}\r\n                />\r\n                {this.state.image && (\r\n                    <Image style={styles.image} source={{ uri: this.state.image }} />\r\n                )}\r\n                {\r\n                    this.state.loading && (<ActivityIndicator style={styles.activityIndicator} size=\"large\" />)\r\n                }\r\n                <View style={styles.buttonСontainer}>\r\n                    <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={this.pickImage}>\r\n                        <Text style={styles.buttonText}>Изменить изображение</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default connect(selectNotes, { createNote, editNote, updateNotes })(EditNote);\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n    },\r\n\r\n    buttonСontainer: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n\r\n    image: {\r\n        height: 300,\r\n        borderRadius: 20,\r\n        marginTop: 10,\r\n        marginBottom: 5,\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#8A2BE2',\r\n        borderRadius: 20,\r\n        marginVertical: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    nameText: {\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        marginBottom: 15,\r\n        borderRadius: 20,\r\n        backgroundColor: '#121212',\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n\r\n    descriptionText: {\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        marginBottom: 5,\r\n        borderRadius: 20,\r\n        backgroundColor: '#121212',\r\n        color: 'white',\r\n        fontSize: 16,\r\n        minHeight: 200,\r\n        textAlignVertical: 'top'\r\n    },\r\n\r\n    activityIndicator: {\r\n        marginTop: 10,\r\n        marginBottom: 5,\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}