{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\source\\\\HSE\\\\Cross-PlatformApps\\\\cloud3nis-hw4-Kuznetsov-Michail\\\\notes\\\\src\\\\screens\\\\Notes.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport NoteView from \"../components/NoteView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { selectNotes } from \"../modules/notes/selectors\";\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from '@react-navigation/native';\n\nvar Notes = function (_React$Component) {\n  _inherits(Notes, _React$Component);\n\n  var _super = _createSuper(Notes);\n\n  function Notes(props) {\n    var _this;\n\n    _classCallCheck(this, Notes);\n\n    _this = _super.call(this, props);\n    _this.emptyNote = {\n      id: null,\n      name: '',\n      description: '',\n      image: null\n    };\n    _this.state = {\n      notes: _this.props.notes\n    };\n\n    _this.props.navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            _this.props.navigation.navigate('CreateNote', {\n              handleSaveNode: _this.onNoteCreate,\n              note: _this.emptyNote\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.addText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }\n        }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n      }\n    });\n\n    _this.onNoteCreate = _this.onNoteCreate.bind(_assertThisInitialized(_this));\n    _this.onNoteRedact = _this.onNoteRedact.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Notes, [{\n    key: \"onNoteCreate\",\n    value: function onNoteCreate(note) {\n      var newNotes = _extends([], this.state.notes);\n\n      newNotes.push(note);\n      this.setState({\n        notes: newNotes\n      });\n    }\n  }, {\n    key: \"onNoteRedact\",\n    value: function onNoteRedact(note) {\n      var newNotes = _extends([], this.state.notes);\n\n      newNotes = newNotes.map(function (currentNote) {\n        return currentNote.id === note.id ? note : currentNote;\n      });\n      this.setState({\n        notes: newNotes\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.notes);\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, this.state.notes.length != null && this.state.notes.length !== 0 ? React.createElement(FlatList, {\n        data: this.state.notes,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(NoteView, {\n            note: item,\n            navigation: _this2.props.navigation,\n            handleSaveNode: _this2.onNoteRedact,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 59\n            }\n          });\n        },\n        extraData: this.state.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }) : React.createElement(Text, {\n        style: styles.noNotesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"Записей нет\"));\n    }\n  }]);\n\n  return Notes;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps, null)(Notes);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: 'rgba(0, 0, 0, 0.9)',\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  },\n  noNotesText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  addButton: {\n    backgroundColor: '#8A2BE2',\n    borderRadius: 20,\n    marginVertical: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  addText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/screens/Notes.jsx"],"names":["React","NoteView","selectNotes","connect","ThemeProvider","Notes","props","emptyNote","id","name","description","image","state","notes","navigation","setOptions","headerRight","styles","addButton","navigate","handleSaveNode","onNoteCreate","note","addText","bind","onNoteRedact","newNotes","push","setState","map","currentNote","console","log","container","length","item","noNotesText","Component","mapStateToProps","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","paddingVertical","color","fontSize","textAlign","borderRadius","marginVertical","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NoteView from '../components/NoteView';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport {selectNotes} from \"../modules/notes/selectors\";\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider } from '@react-navigation/native';\r\n\r\nclass Notes extends React.Component {\r\n\r\n    emptyNote = {\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        image: null,\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            notes: this.props.notes,\r\n\r\n        }\r\n\r\n        this.props.navigation.setOptions({\r\n            headerRight: () => (\r\n                <TouchableOpacity\r\n                    style={styles.addButton}\r\n                    onPress={() => {\r\n                        this.props.navigation.navigate('CreateNote', { handleSaveNode: this.onNoteCreate, note: this.emptyNote })\r\n                    }}>\r\n                    <Text style={styles.addText}>Создать</Text>\r\n                </TouchableOpacity>\r\n            ),\r\n        });\r\n\r\n        this.onNoteCreate = this.onNoteCreate.bind(this);\r\n        this.onNoteRedact = this.onNoteRedact.bind(this);\r\n    }\r\n\r\n    onNoteCreate(note) {\r\n        var newNotes = Object.assign([], this.state.notes);\r\n        newNotes.push(note);\r\n        this.setState({ notes: newNotes });\r\n    }\r\n\r\n    onNoteRedact(note) {\r\n        var newNotes = Object.assign([], this.state.notes);\r\n        newNotes = newNotes.map((currentNote) =>\r\n            (currentNote.id === note.id) ? note : currentNote\r\n        );\r\n        this.setState({ notes: newNotes });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.notes);\r\n        return (\r\n            <View style={styles.container}>\r\n                {\r\n                    this.state.notes.length != null && this.state.notes.length !== 0\r\n                        ?\r\n                        (\r\n                            <FlatList\r\n                                data={this.state.notes}\r\n                                renderItem={({ item }) => <NoteView note={item} navigation={this.props.navigation} handleSaveNode={this.onNoteRedact} />}\r\n                                extraData={this.state.notes}\r\n                            />\r\n                        )\r\n                        :\r\n                        <Text style={styles.noNotesText}>{\"Записей нет\"}</Text>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    notes: state.notes\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Notes)\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'stretch',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.9)',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n    },\r\n\r\n    noNotesText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    addButton: {\r\n        backgroundColor: '#8A2BE2',\r\n        borderRadius: 20,\r\n        marginVertical: 10,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n    },\r\n\r\n    addText: {\r\n        color: 'white',\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n})"]},"metadata":{},"sourceType":"module"}