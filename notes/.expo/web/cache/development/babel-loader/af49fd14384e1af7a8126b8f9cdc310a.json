{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  notes: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.CREATE_PROJECT:\n      {\n        var project = action.project;\n\n        var projects = _objectSpread({}, state.byId);\n\n        projects[project.id] = project;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: projects\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/modules/notes/reducer.js"],"names":["initialState","notes","state","action","type","t","CREATE_PROJECT","project","projects","byId","id"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,CAAC,CAACC,cAAP;AAAuB;AACnB,YAAQC,OAAR,GAAoBJ,MAApB,CAAQI,OAAR;;AACA,YAAMC,QAAQ,qBAAON,KAAK,CAACO,IAAb,CAAd;;AACAD,QAAAA,QAAQ,CAACD,OAAO,CAACG,EAAT,CAAR,GAAuBH,OAAvB;AAEA,+CAAYL,KAAZ;AAAmBO,UAAAA,IAAI,EAAED;AAAzB;AACH;;AACD;AACI,aAAON,KAAP;AATR;AAWH,CAZD","sourcesContent":["const initialState = {\r\n    notes: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case t.CREATE_PROJECT: {\r\n            const { project } = action;\r\n            const projects = {...state.byId};\r\n            projects[project.id] = project;\r\n\r\n            return { ...state, byId: projects };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}