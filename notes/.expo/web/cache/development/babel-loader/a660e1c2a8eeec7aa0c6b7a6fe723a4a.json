{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(rootSaga);\n\nimport notesSaga from \"./notes/sagas\";\nimport { fork } from 'redux-saga/effects';\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fork(notesSaga);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/modules/sagas.js"],"names":["rootSaga","notesSaga","fork"],"mappings":";;uCAGyBA,Q;;AAHzB,OAAOC,SAAP;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,eAAe,SAAUF,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAME,IAAI,CAACD,SAAD,CAAV;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import notesSaga from \"./notes/sagas\";\r\nimport { fork } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n    yield fork(notesSaga);\r\n}"]},"metadata":{},"sourceType":"module"}