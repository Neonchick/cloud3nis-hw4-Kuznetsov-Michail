{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  notes: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case t.LOAD_PROJECTS_SUCCESS:\n      {\n        var projects = action.projects;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: keyBy(projects, 'id'),\n          isLoaded: true\n        });\n      }\n\n    case t.LOAD_PROJECTS_FAILURE:\n      {\n        var error = action.error;\n        console.log('Failed to load');\n        console.log('Reason: ', action.error);\n        return state;\n      }\n\n    case t.CREATE_PROJECT:\n      {\n        var project = action.project;\n\n        var _projects = _objectSpread({}, state.byId);\n\n        _projects[project.id] = project;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _projects\n        });\n      }\n\n    case t.DELETE_PROJECT:\n      {\n        var id = action.id;\n\n        var _projects2 = _objectSpread({}, state.projects);\n\n        _projects2[id] = undefined;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          projects: _projects2\n        });\n      }\n\n    case t.CREATE_TASK:\n      {\n        var task = action.task,\n            projectId = action.projectId;\n        var _project = state.byId[projectId];\n\n        var updatedProject = _objectSpread(_objectSpread({}, _project), {}, {\n          tasks: [].concat(_toConsumableArray(_project.tasks), [task])\n        });\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, projectId, updatedProject))\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/source/HSE/Cross-PlatformApps/cloud3nis-hw4-Kuznetsov-Michail/notes/src/modules/notes/reducer.js"],"names":["initialState","notes","state","action","type","t","LOAD_PROJECTS_SUCCESS","projects","byId","keyBy","isLoaded","LOAD_PROJECTS_FAILURE","error","console","log","CREATE_PROJECT","project","id","DELETE_PROJECT","undefined","CREATE_TASK","task","projectId","updatedProject","tasks"],"mappings":";;;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,CAAC,CAACC,qBAAP;AAA8B;AAC1B,YAAQC,QAAR,GAAqBJ,MAArB,CAAQI,QAAR;AAEA,+CACOL,KADP;AAEIM,UAAAA,IAAI,EAAEC,KAAK,CAACF,QAAD,EAAW,IAAX,CAFf;AAGIG,UAAAA,QAAQ,EAAE;AAHd;AAKH;;AACD,SAAKL,CAAC,CAACM,qBAAP;AAA8B;AAC1B,YAAQC,KAAR,GAAkBT,MAAlB,CAAQS,KAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,MAAM,CAACS,KAA/B;AACA,eAAOV,KAAP;AACH;;AACD,SAAKG,CAAC,CAACU,cAAP;AAAuB;AACnB,YAAQC,OAAR,GAAoBb,MAApB,CAAQa,OAAR;;AACA,YAAMT,SAAQ,qBAAOL,KAAK,CAACM,IAAb,CAAd;;AACAD,QAAAA,SAAQ,CAACS,OAAO,CAACC,EAAT,CAAR,GAAuBD,OAAvB;AAEA,+CAAYd,KAAZ;AAAmBM,UAAAA,IAAI,EAAED;AAAzB;AACH;;AACD,SAAKF,CAAC,CAACa,cAAP;AAAuB;AACnB,YAAQD,EAAR,GAAed,MAAf,CAAQc,EAAR;;AACA,YAAMV,UAAQ,qBAAOL,KAAK,CAACK,QAAb,CAAd;;AACAA,QAAAA,UAAQ,CAACU,EAAD,CAAR,GAAeE,SAAf;AAEA,+CACOjB,KADP;AAEIK,UAAAA,QAAQ,EAAEA;AAFd;AAIH;;AACD,SAAKF,CAAC,CAACe,WAAP;AAAoB;AAChB,YAAQC,IAAR,GAA4BlB,MAA5B,CAAQkB,IAAR;AAAA,YAAcC,SAAd,GAA4BnB,MAA5B,CAAcmB,SAAd;AACA,YAAMN,QAAO,GAAGd,KAAK,CAACM,IAAN,CAAWc,SAAX,CAAhB;;AAEA,YAAMC,cAAc,mCACbP,QADa;AAEhBQ,UAAAA,KAAK,+BAAMR,QAAO,CAACQ,KAAd,IAAqBH,IAArB;AAFW,UAApB;;AAKA,+CACOnB,KADP;AAEIM,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECc,SAFD,EAEaC,cAFb;AAFR;AAQH;;AACD;AACI,aAAOrB,KAAP;AApDR;AAsDH,CAvDD","sourcesContent":["const initialState = {\r\n    notes: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case t.LOAD_PROJECTS_SUCCESS: {\r\n            const { projects } = action;\r\n\r\n            return {\r\n                ...state,\r\n                byId: keyBy(projects, 'id'),\r\n                isLoaded: true,\r\n            };\r\n        }\r\n        case t.LOAD_PROJECTS_FAILURE: {\r\n            const { error } = action;\r\n            console.log('Failed to load');\r\n            console.log('Reason: ', action.error);\r\n            return state;\r\n        }\r\n        case t.CREATE_PROJECT: {\r\n            const { project } = action;\r\n            const projects = {...state.byId};\r\n            projects[project.id] = project;\r\n\r\n            return { ...state, byId: projects };\r\n        }\r\n        case t.DELETE_PROJECT: {\r\n            const { id } = action;\r\n            const projects = {...state.projects};\r\n            projects[id] = undefined;\r\n\r\n            return {\r\n                ...state,\r\n                projects: projects\r\n            }\r\n        }\r\n        case t.CREATE_TASK: {\r\n            const { task, projectId } = action;\r\n            const project = state.byId[projectId];\r\n\r\n            const updatedProject = {\r\n                ...project,\r\n                tasks: [...project.tasks, task],\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                byId: {\r\n                    ...state.byId,\r\n                    [projectId]: updatedProject,\r\n                }\r\n            }\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}